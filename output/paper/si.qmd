---
title: "Supplementary Material"

format:
  docx:
    reference-doc: reference_document.docx

crossref:
  fig-title: Supplementary Figure
  tbl-title: Supplementary Table

bibliography: bibliography.bib
csl: ama11.csl

link-citations: true
linkcolor: blue

editor_options: 
  chunk_output_type: console

execute:
  echo: false
  warning: false
  error: false
  message: false
---

```{r}
here::i_am("output/paper/si.qmd")
```

```{r vars}
source(here::here("code/dictionaries.R"))
source(here::here("code/data.R"))
source(here::here("code/proc_res.R"))

is_hpc <- FALSE
store <- ifelse(
  is_hpc, 
  paste0(
    "/PROJECTES/HELIX_OMICS/DATA_PREVIOUS_MIGRATION/",
    "lorenzoF/data/data_paper3/_targets/_targets_res"
  ), 
  "~/mounts/rstudioserver/data/data_paper3/_targets/_targets_res"
)

id_var <- "HelixID"
num_digits_est = 3
num_digits_sig = 2
params_ <- params(is_hpc = is_hpc)
threshold_within_lod <- params_$steps$rq2$preproc_outcome$llodq$threshold_within
threshold_overall_lod <- params_$steps$rq2$preproc_outcome$llodq$threshold_overall
threshold_within_nan <- params_$steps$rq2$preproc_outcome$missings$threshold_within
threshold_overall_nan <- params_$steps$rq2$preproc_outcome$missings$threshold_overall
knn_k <- params_$steps$rq2$preproc_outcome$missings$k
```

- Files for supplementary data must be accompanied by a summary of the file names and types.

# Supplementary information

## Directed Acyclic Graphs

```{r dag-1}
targets::tar_load("all_dags", store = store)
cat(all_dags$chem_to_out)
```

```{r dag-2}
cat(all_dags$chem_to_marker)
```

```{r dag-3}
cat(all_dags$marker_to_out)
```

# Supplementary tables

## Descriptive data

### Study populations

```{r codebook-1}
#| label: tbl-codebook-1
#| tbl-cap: Codebook for covariates used in RQ1

targets::tar_load(
  dplyr::contains("codebook_"),
  store = store
)
codebook_1
```

```{r codebook-2}
#| label: tbl-codebook-2
#| tbl-cap: Codebook for covariates used in RQ2

codebook_2
```

```{r codebook-3}
#| label: tbl-codebook-3
#| tbl-cap: Codebook for covariates used in RQ3

codebook_3
```

### Description of chemicals

```{r info-chems}
#| label: tbl-info-chems
#| tbl-cap: Information about non-persistent EDCs

edcs_info <- myphd::edcs_information() |>
  tidylog::select(-c(chem_id, smiles, ctd_id, exposome_explorer_id)) |>
  tidylog::mutate(
    var = janitor::make_clean_names(
      short_name,
      replace = c(`-` = ""),
      case = "none"
    ) |>
      tolower()
  ) |>
  tidylog::relocate(var, .after = short_name)
gt::gt(edcs_info,
       groupname_col = "class") |>
  gt::sub_values(
    values = c("NA"),
    replacement = ""
  ) |>
  gt::cols_label(
    full_name = "Compound",
    short_name = "Symbol",
    var = "Variable name",
    pubchem_cid = "PubChem CID",
    parental_compound = "Parental compound"
  ) |>
  gt::tab_style(
    locations = gt::cells_row_groups(group = dplyr::everything()),
    style = list(gt::cell_text(weight = "bold"))
  )
```

### Description of metabolites

```{r info-mets}
#| label: tbl-info-mets
#| tbl-cap: Information about metabolites

mets_info <- readODS::read_ods(
  path = here::here("docs", "steroids.ods")
) |>
  tidylog::select(analyte, acronym, type, hmdb_id, cas_number)
gt::gt(mets_info,
       groupname_col = "type") |>
  gt::sub_values(
    values = c("NA"),
    replacement = ""
  ) |>
  gt::cols_label(
    analyte = "Metabolite",
    acronym = "Symbol",
    hmdb_id = "HMDB ID",
    cas_number = "CAS number"
  ) |>
  gt::tab_style(
    locations = gt::cells_row_groups(group = dplyr::everything()),
    style = list(gt::cell_text(weight = "bold"))
  ) |>
  gt::tab_footnote(
    footnote = "Human Metabolome Database",
    locations = gt::cells_column_labels(
      columns = hmdb_id
    )
  ) |>
  gt::tab_footnote(
    footnote = "Chemical Abstracts Service",
    locations = gt::cells_column_labels(
      columns = cas_number
    )
  )
```

```{r lloq-mets}
#| label: tbl-lloq-mets
#| tbl-cap: Lower limits of quantification for the corticosteroids

lloq_mets <- load_steroids()$loq |>
  tidylog::mutate(
    metabolite = stringr::str_replace(
      metabolite,
      "^X", ""
    )
  ) |>
  tidylog::rename(
    lloq = "loq"
  )
gt::gt(lloq_mets |> dplyr::arrange(metabolite)) |>
  gt::tab_footnote(
    footnote = "Lower limit of quantification expressed in nanograms per millilitre.",
    locations = gt::cells_column_labels(
      columns = lloq
    )
  )
```

## Other results

### Balancing weights for effect modification

```{r}
targets::tar_load(
  dplyr::matches("weights_(\\d)SA$"),
  store = store
)
```

```{r weights-1sa}
#| label: tbl-weights-1sa
#| tbl-cap: Weights

tidy_res_weighted_fits(
  dat_tbl = weights_1SA$dat_tbl,
  dat_plt = weights_1SA$dat_plt,
  sa_var = "e3_sex"
)$table
```

```{r weights-2sa}
#| label: tbl-weights-2sa
#| tbl-cap: Weights

tidy_res_weighted_fits(
  dat_tbl = weights_2SA$dat_tbl,
  dat_plt = weights_2SA$dat_plt,
  sa_var = "e3_sex"
)$table
```

```{r weights-3sa}
#| label: tbl-weights-3sa
#| tbl-cap: Weights

tidy_res_weighted_fits(
  dat_tbl = weights_3SA$dat_tbl,
  dat_plt = weights_3SA$dat_plt,
  sa_var = "e3_sex"
)$table
```

# Supplementary figures

## Descriptive data

### Description of chemicals

```{r desc-chems-lod}
#| label: fig-desc-chems
#| fig-cap: Description of chemicals
#| fig-width: 6
#| fig-height: 7

viz_desc_vars(
  dat = load_dat_request()$dat,
  vars = vars_of_interest(append_to_chem = "cdesc")$chemicals,
  fct_levels = c(1, 2, 3, 4),
  is_chem = TRUE
)$plot
```

### Description of metabolites

```{r desc-mets-lod}
#| label: fig-desc-mets
#| fig-cap: Description of metabolites
#| fig-width: 6
#| fig-height: 7

viz_desc_vars(
  dat = myphd::extract_cohort(load_steroids()$desc,
                              id_var = id_var) |>
    tidylog::mutate(
      cohort = dplyr::case_when(
        cohort == "EDE" ~ "EDEN",
        cohort == "KAN" ~ "KANC",
        cohort == "MOB" ~ "MOBA",
        cohort == "RHE" ~ "RHEA",
        .default = cohort
      )
    ),
  vars = vars_of_interest()$metabolites |>
    paste0("_cdesc"),
  fct_levels = c(1, 2, 3, 4),
  is_chem = FALSE
)$plot
```

## Main results

### Average dose-response functions for significant results

```{r}
targets::tar_load(
  dplyr::matches("marginal_gcomp_(\\d)$"),
  store = store
)
```

```{r adrfs-rq3}
#| label: fig-adrfs-rq3
#| fig-cap: Average dose-response functions for RQ3
#| fig-subcap:
#|   - "Cortisol production"
#|   - "11bHSD"
#| fig-width: 6
#| fig-height: 7
#| layout-ncol: 2

exposures_of_interest <- c(
  "cortisol production",
  "X11bHSD"
)
ret_adrfs <- lapply(
  exposures_of_interest, function(x) {
    plot_adrf(
      df_preds = marginal_gcomp_3 |>
        tidylog::filter(
          variable == x
        )
    )
  }
)
ret_adrfs[[1]]
ret_adrfs[[2]]
```

## Other results

### Marginal comparisons for effect modification

```{r}
targets::tar_load(
  dplyr::matches("marginal_comparisons_(\\d)SA$"),
  store = store
)
```

```{r marginal-1sa}
#| label: fig-marginal-1sa
#| fig-cap: Average comparisons for effect modification
#| fig-width: 6
#| fig-height: 7

tidy_res_meffects(
  df = marginal_comparisons_1SA,
  sa_var = "e3_sex",
  which_res = "comparisons",
  num_digits_est = num_digits_est,
  num_digits_sig = num_digits_sig
)$plot
```

```{r marginal-2sa}
#| label: fig-marginal-2sa
#| fig-cap: Average comparisons for effect modification
#| fig-width: 9
#| fig-height: 10

tidy_res_meffects(
  df = marginal_comparisons_2SA,
  sa_var = "e3_sex",
  which_res = "comparisons",
  num_digits_est = num_digits_est,
  num_digits_sig = num_digits_sig
)$plot
```

```{r marginal-3sa}
#| label: fig-marginal-3sa
#| fig-cap: Average comparisons for effect modification
#| fig-width: 5
#| fig-height: 5

tidy_res_meffects(
  df = marginal_comparisons_3SA,
  sa_var = "e3_sex",
  which_res = "comparisons",
  num_digits_est = num_digits_est,
  num_digits_sig = num_digits_sig
)$plot
```

# References {.unnumbered}

::: {#refs}
:::
